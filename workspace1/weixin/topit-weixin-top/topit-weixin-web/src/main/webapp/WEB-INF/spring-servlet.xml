<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.0.xsd">

	<import resource="classpath*:META-INF/spring-web.xml"/>
	<context:property-placeholder location="classpath:common.properties" ignore-unresolvable="true"/>
  	<mvc:interceptors>  
        <bean class="com.topsports.weixin.base.web.common.LoginInterceptor"/>  
    </mvc:interceptors>
	
	<mvc:interceptors>
		<bean class="org.springframework.web.servlet.mvc.WebContentInterceptor">
			<property name="cacheSeconds" value="0" />
			<property name="useExpiresHeader" value="true" />
			<property name="useCacheControlHeader" value="true" />
			<property name="useCacheControlNoStore" value="true" />
			<property name="alwaysUseFullPath" value="true" />
		</bean>
	</mvc:interceptors>
	<mvc:interceptors>  
        <bean class="com.topsports.weixin.base.web.common.LoginInterceptor"/>  
    </mvc:interceptors>
	<!-- 激活@Controller模式 -->
	<mvc:annotation-driven>
		<mvc:message-converters>
			<bean
				class="org.springframework.http.converter.ByteArrayHttpMessageConverter" />
			<bean class="org.springframework.http.converter.StringHttpMessageConverter">
				<!-- 支持客户端请求的类型，以下列列表中第一个优先输出 -->
				<property name="supportedMediaTypes">
					<list>
						<value>text/html;charset=UTF-8</value>
						<value>application/json;charset=UTF-8</value>
						<value>text/plain;charset=UTF-8</value>
					</list>
				</property>
			</bean>
			<bean
				class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
				<!-- 支持客户端请求的类型 -->
				<property name="supportedMediaTypes">
					<list>
						<value>application/json;charset=UTF-8</value>
						<value>text/html;charset=UTF-8</value>
						<value>text/plain;charset=UTF-8</value>
					</list>
				</property>
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>

	<mvc:default-servlet-handler />
	<!-- 启动定时任务 -->
	<task:annotation-driven />

	<!-- 对包中的所有类进行扫描，以完成Bean创建和自动依赖注入的功能 需要更改 -->
	<context:component-scan base-package="com.topsports.weixin.base.web.common" />
	<context:component-scan base-package="com.topsports.weixin.base.web.controller" />
	<context:component-scan base-package="com.topsports.weixin.controller" />
	<!--<context:component-scan base-package="com.topsports.weixin.service" />-->

	<bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter" />

	<!-- 视图解析器，根据视图的名称new ModelAndView(name)，在配置文件查找对应的bean配置 -->
	<bean class="org.springframework.web.servlet.view.BeanNameViewResolver">
		<property name="order" value="1" />
	</bean>

	<bean
		class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<property name="order" value="2" />
		<!-- 用于开启 /userinfo/123?format=json 的支持 默认是true -->
		<property name="favorParameter" value="true" />
		<!-- 用于关闭 /userinfo/123.json 的支持 默认是true -->
		<property name="favorPathExtension" value="false" />
		<!-- 设置为true以忽略对Accept Header的支持 -->
		<property name="ignoreAcceptHeader" value="true" />

		<!-- 在没有扩展名时即: "/user/1" 时的默认展现形式 -->
		<property name="defaultContentType" value="text/html" />

		<!-- 扩展名至mimeType的映射,即 /user.json => application/json -->
		<property name="mediaTypes">
			<map>
				<entry key="json" value="application/json" />
				<entry key="jsonp" value="application/javascript" />
				<entry key="xml" value="application/xml" />
			</map>
		</property>
	</bean>

	<!-- 设置freeMarker的配置文件路径 -->
	<bean id="freemarkerConfiguration"
		class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="location" value="classpath:freemarker.properties" />
	</bean>

	<!-- 配置freeMarker的模板路径 -->
	<bean id="freemarkerConfig"
		class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
		<property name="freemarkerSettings" ref="freemarkerConfiguration" />
		<property name="templateLoaderPath">
			<value>/</value>
		</property>
		<property name="freemarkerVariables">
			<map>
				<entry key="domainStatic" value="${domainStatic}" />
				<entry key="picServiceUrl" value="${picServiceUrl}" />
				<entry key="taskdebug" value="${taskdebug}" />
				<entry key="xml_escape" value-ref="fmXmlEscape" />
				<entry key="ftl_route" value="/WEB-INF/ftl/component/ui" />
			</map>
		</property>
	</bean>

	<bean id="fmXmlEscape" class="freemarker.template.utility.XmlEscape" />
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
		<!-- use default setting now -->
		<property name="viewClass"
			value="org.springframework.web.servlet.view.freemarker.FreeMarkerView" />
		<property name="order" value="3" />
		<property name="prefix" value="WEB-INF/ftl/pages/" />
		<property name="suffix" value=".ftl" />
		<property name="contentType" value="text/html; charset=utf-8" />

	</bean>

	<bean name="jsonView"
		class="org.springframework.web.servlet.view.json.MappingJackson2JsonView">
		<property value="true" name="extractValueFromSingleKeyModel" />
		<property value="application/json;charset=UTF-8" name="contentType" />
	</bean>
	<!-- 文件上传 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver" />
</beans>